import{d as e,u as a,r as t,o as n,c as l,a as r,t as s,w as o,l as p}from"./index.dbf0a5d0.js";import{H as i,_ as u}from"./NextStep.d5835485.js";var b=e({name:"Bean",components:{Hljs:i,NextStep:u},setup(){const{t:e}=a();return{t:e}}});const d={class:"flc",style:{gap:"5px"}},c={style:{margin:"16px 0"}},m={style:{margin:"16px 0"}},g={style:{margin:"16px 0"}},f={style:{margin:"16px 0"}},y={style:{margin:"16px 0"}},v=r("h3",{style:{"margin-top":"16px"},id:"api"},"Api",-1),x=r("h4",{style:{"margin-top":"16px"}},"getBeanInstance",-1),h={style:{margin:"16px 0"}},_=p("true"),B=r("h4",{style:{"margin-top":"16px"}},"@Value",-1),S={style:{margin:"16px 0"}},w=p("false"),T=r("h4",{style:{"margin-top":"16px"}},"@Autowired",-1),I={style:{margin:"16px 0"}},N=p("false"),V=r("h4",{style:{"margin-top":"16px"}},"@Bean",-1),A={style:{margin:"16px 0"}},k=p("false"),j=r("h4",{style:{"margin-top":"16px"}},"@beforebean",-1),C={style:{margin:"16px 0"}},E=p("false"),O=r("h4",{style:{"margin-top":"16px"}},"@Condition",-1),q={style:{margin:"16px 0"}},D=p("false");b.render=function(e,a,i,u,b,G){const H=t("hljs"),M=t("el-form-item"),U=t("el-form"),W=t("next-step");return n(),l("div",d,[r("h2",{id:e.t("headers.bean")},s(e.t("headers.bean")),9,["id"]),r("p",c,s(e.t("bean.p1")),1),r("h3",{id:e.t("bean.declare")},s(e.t("bean.declare")),9,["id"]),r("p",m,s(e.t("bean.p2")),1),r(H,{language:"typescript",code:"@Bean()\nclass TestService {\n  someVal: string\n}"},null,8,["code"]),r("p",g,s(e.t("bean.p3")),1),r(H,{language:"typescript",code:"import { getBeanInstance } from 'moon-boot'\nexport function Controller(): ClassDecorator {\n  return async function(target) {\n    // ...ignore some code\n    const instance = await getBeanInstance(target)\n  }\n}"},null,8,["code"]),r("h3",{style:{"margin-top":"16px"},id:e.t("bean.advantage")},s(e.t("bean.advantage")),9,["id"]),r("p",f,s(e.t("bean.p4")),1),r(H,{language:"typescript",code:"@Bean()\nclass TestService {\n  // Auto import Env server.port and transform it to type Number\n  @Value('server.port:8080', { type: Number })\n  port: number\n\n  test() {\n    console.log(this.port)\n  }\n}"},null,8,["code"]),r("h3",{style:{"margin-top":"16px"},id:e.t("bean.attention")},s(e.t("bean.attention")),9,["id"]),r("p",y,s(e.t("bean.p5")),1),r(H,{language:"typescript",code:"@Bean()\nclass TestService {\n  constructor(a: number) {\n    assert(a === undefined) // true\n  }\n}"},null,8,["code"]),v,x,r("p",h,s(e.t("bean.getBeanInstance.remark")),1),r(U,{"label-width":"80px"},{default:o((()=>[r(M,{label:e.t("params")},{default:o((()=>[p(s(e.t("bean.getBeanInstance.params")),1)])),_:1},8,["label"]),r(M,{label:e.t("returns")},{default:o((()=>[p(s(e.t("bean.getBeanInstance.returns")),1)])),_:1},8,["label"]),r(M,{label:e.t("async")},{default:o((()=>[_])),_:1},8,["label"]),r(M,{label:e.t("example")},{default:o((()=>[r(H,{language:"typescript",code:"class InnerService {}\nconst instance = await getBeanInstance(InnerService)\n"},null,8,["code"])])),_:1},8,["label"])])),_:1}),B,r("p",S,s(e.t("bean.value.remark")),1),r(U,{"label-width":"80px"},{default:o((()=>[r(M,{label:e.t("params")},{default:o((()=>[p(s(e.t("bean.value.params")),1)])),_:1},8,["label"]),r(M,{label:e.t("returns")},{default:o((()=>[p(s(e.t("bean.value.returns")),1)])),_:1},8,["label"]),r(M,{label:e.t("async")},{default:o((()=>[w])),_:1},8,["label"]),r(M,{label:e.t("example")},{default:o((()=>[r(H,{language:"typescript",code:"@Bean()\nclass TestService {\n  @Value('server.port')\n  port1: string // Auto inject server.port from env\n\n  @Value('server.port:8080')\n  port2: string // Use : Give a default value\n\n  @Value('server.port:8080', { type: Number })\n  port3: number // Give Type to transform\n\n  @Value('server.port:8080')\n  port4: number // Attention!!! Even though We try to get the type 'number', But it might be String, Don't use!\n\n  @Value('server.port:8080')\n  @Type(Number)\n  port5: number // It's the same to use @Type or @Value option\n}\n"},null,8,["code"])])),_:1},8,["label"])])),_:1}),T,r("p",I,s(e.t("bean.autowired.remark")),1),r(U,{"label-width":"80px"},{default:o((()=>[r(M,{label:e.t("params")},{default:o((()=>[p(s(e.t("bean.autowired.params")),1)])),_:1},8,["label"]),r(M,{label:e.t("returns")},{default:o((()=>[p(s(e.t("bean.autowired.returns")),1)])),_:1},8,["label"]),r(M,{label:e.t("async")},{default:o((()=>[N])),_:1},8,["label"]),r(M,{label:e.t("example")},{default:o((()=>[r(H,{language:"typescript",code:"@Bean()\nclass TestService {\n  @Autowired()\n  otherService: OtherService // default find property name\n\n  @Autowired('otherService')\n  otherName: OtherService // find with other Names\n\n  @Autowired('notExistsService', { required: false })\n  otherName?: OtherService // required default is true\n}\n"},null,8,["code"])])),_:1},8,["label"])])),_:1}),V,r("p",A,s(e.t("bean.bean.remark")),1),r(U,{"label-width":"80px"},{default:o((()=>[r(M,{label:e.t("params")},{default:o((()=>[p(s(e.t("bean.bean.params")),1)])),_:1},8,["label"]),r(M,{label:e.t("returns")},{default:o((()=>[p(s(e.t("bean.bean.returns")),1)])),_:1},8,["label"]),r(M,{label:e.t("async")},{default:o((()=>[k])),_:1},8,["label"]),r(M,{label:e.t("example")},{default:o((()=>[r(H,{language:"typescript",code:"@Bean()\nclass TestService {}\n@Bean('otherName')\nclass __Service__ {}\n"},null,8,["code"])])),_:1},8,["label"])])),_:1}),j,r("p",C,s(e.t("bean.beforebean.remark")),1),r(U,{"label-width":"80px"},{default:o((()=>[r(M,{label:e.t("params")},{default:o((()=>[p(s(e.t("bean.beforebean.params")),1)])),_:1},8,["label"]),r(M,{label:e.t("returns")},{default:o((()=>[p(s(e.t("bean.beforebean.returns")),1)])),_:1},8,["label"]),r(M,{label:e.t("async")},{default:o((()=>[E])),_:1},8,["label"]),r(M,{label:e.t("example")},{default:o((()=>[r(H,{language:"typescript",code:"@BeforeBean(env => {\n  console.log(env)\n})\n@Bean()\nclass TestService {}\n"},null,8,["code"])])),_:1},8,["label"])])),_:1}),O,r("p",q,s(e.t("bean.condition.remark")),1),r(U,{"label-width":"80px"},{default:o((()=>[r(M,{label:e.t("params")},{default:o((()=>[p(s(e.t("bean.condition.params")),1)])),_:1},8,["label"]),r(M,{label:e.t("returns")},{default:o((()=>[p(s(e.t("bean.condition.returns")),1)])),_:1},8,["label"]),r(M,{label:e.t("async")},{default:o((()=>[D])),_:1},8,["label"]),r(M,{label:e.t("example")},{default:o((()=>[r(H,{language:"typescript",code:"@Condition(env => {\n  return Math.random() > 0.5\n})\n@Bean()\nclass TestService {}\n"},null,8,["code"])])),_:1},8,["label"])])),_:1}),r(W)])};export default b;
