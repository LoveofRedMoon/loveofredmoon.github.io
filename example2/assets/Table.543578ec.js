var e=Object.assign;import{_ as a}from"./PCheckbox.88445307.js";import{d as l,H as n,c as t,I as r,J as d,K as p,x as s,z as o,A as i,a as m,o as u,b as c,e as b,w as x,k as y,B as k}from"./index.44837868.js";import{_ as f}from"./PCard.c58f7886.js";import{a as h,_ as v,P as g}from"./PTable.410e58a1.js";import{_}from"./PScroll.834b28d9.js";import{_ as P}from"./ReadComponent.f0b84223.js";import"./vendor.d9d03746.js";var C=l({name:"PTableN",props:{columns:{type:Array,typeStr:"ColumnOption[]",mark:"表格列, 具体详见下表",default:[]},list:{type:Array,typeStr:"any[]",mark:"数据列表, 空数据渲染为暂无数据",default:[]}},slotsMark:[{key:"title",default:"无",param:"",paramRemark:"",remark:"标题渲染, 默认使用title参数"},{key:"operate",default:"无",param:"",paramRemark:"",remark:"按钮操作渲染, 默认不渲染"},{key:"expand",default:"无",param:"",paramRemark:"",remark:"额外内容渲染, 在该行数据之下, 使用数据中_expand字段修改, _expandName 将传递给PStretch组件, 默认不渲染"},{key:"header-${columnKey}",default:"无",param:"",paramRemark:"",remark:"表头渲染, 默认使用对应column中的labelRender, label"},{key:"column-${columnKey}",default:"无",param:"{ data: object, value: any, index: number, column: ColumnOption}",paramRemark:"data: 该行数据, value: 本应渲染值, index: 行数, column: 列属性",remark:"表格体渲染, 默认使用对应column中的render, data[key]"}],setup(a,l){const{list:s}=n(a),o=t((()=>{const l=a.columns,n=l.filter((e=>"left"===e.fix)).reverse().map(((a,l)=>e(e({},a),{fixIdx:l}))).reverse(),t=l.filter((e=>"right"===e.fix)).map(((a,l)=>e(e({},a),{fixIdx:l})));return[...n,...l.filter((e=>void 0===e.fix)).map(((a,l)=>e(e({},a),{fixIdx:l}))),...t]}));t((()=>o.value.some((e=>e.fix))));return()=>(Object.keys(l.slots).forEach((e=>{if(["title","operate","expand"].includes(e))return;const a=e.replace(/^(header|column)-/,"");o.value.find((e=>e.key===a))||console.warn(`slot: ${e} unused!`)})),r("table",{class:"p-table-n",cellspacing:"0"},[r("thead",{class:"p-table-n-b-header-box"},r("tr",o.value.map(((e,a)=>{var n,t,d,p,s;return r("th",{class:`p-table-n-b-header p-table-n-h-${a} p-table-n-hk-${e.key}${"left"===e.fix?" p-table-h-fix-left":""}`},null!=(s=null!=(p=null==(t=(n=l.slots)[`header-${e.key}`])?void 0:t.call(n))?p:null==(d=e.labelRender)?void 0:d.call(e))?s:e.label)})))),s.value.length?r("tbody",{class:"p-table-n-body"},s.value.map(((e,a)=>[r("tr",{class:`p-table-n-b-list-box p-table-n-b-list-box-${a}`},o.value.map(((n,t)=>{var p,s,o,i,m,u;const c=d(e,n.key);return r("td",r("div",{class:`p-table-n-b-list p-table-n-b-${a}-${t} p-table-n-bk-${n.key} p-table-n-b-row-${a} p-table-n-b-col-${t}${"left"===n.fix?" p-table-n-b-fix-left":""}`,style:{justifyContent:null!=(p=n.justifyContent)?p:"center"}},null!=(u=null!=(m=null==(o=(s=l.slots)[`column-${n.key}`])?void 0:o.call(s,{data:e,value:c,index:a,column:n}))?m:null==(i=n.render)?void 0:i.call(n,{data:e,value:c,index:a,column:n}))?u:c))}))),l.slots.expand?r("tr",r("td",{colspan:o.value.length},r(h,{modelValue:!!e._expand,"onUpdate:modelValue":a=>{e._expand=a},name:e._expandName,class:`p-table-n-b-expand p-table-n-b-expand-${a}`,style:{transition:"max-height 0.2s"}},(()=>l.slots.expand({data:e,value:!!e._expand,index:a,column:"expand"}))))):void 0].filter(Boolean))).flat(1)):r("tbody",r("tr",r("td",{colspan:o.value.length},r("div",{class:"p-table-n-b-list p-table-b-empty center"},[r(p,{class:"pop-tip",style:"font-size:18px;margin: 1px 8px 0 0"}),"暂无数据！"]))))]))}}),$=l({components:{PScroll:_,PDivider:v,PCard:f,PButton:s,PTable:g,ReadComponent:P,PTableN:C},name:"Table",setup(){const e=o([{id:1,name:"香蕉",_expand:!1,_expandName:"groupName"},{id:3,name:"西瓜",_expand:!1,_expandName:"groupName"}]);return{columns:[{key:"checkbox",labelRender:()=>r(a,{combine:!0,name:"group"}),render:({data:e})=>r(a,{name:"group"}),width:"80px",fix:"left"},{key:"id",label:"ID",width:"130px"},{key:"name",label:"名称",fix:"left"},{key:"name1",label:"名称"},{key:"name2",label:"名称"},{key:"name3",label:"名称"},{key:"name4",label:"名称"},{key:"expandIcon",label:"展开",render:({index:a})=>r(s,{importance:"text",onClick:()=>e[a]._expand=!e[a]._expand},{default:()=>"展开"})}],list:e,PTable:i(g)}}});const N={class:"fl-1",style:{padding:"10px"}},j={style:{gap:"5px"}},R=b("h1",null,"PTable 表格",-1),w=b("h5",null,"该组件支持按规范的表格",-1),S=b("div",{class:"blank-30"},null,-1),T=b("h2",null,"用例",-1),I={style:{padding:"24px"}},O=k("查询"),q={style:{"min-height":"200px"},class:"center"},A=k("查询"),B={style:{"min-height":"200px"},class:"center"},V=b("pre",null,[b("code",null,'<p-table title="复杂使用" :list="list" :columns="columns">\r\n  <template #operate>\r\n    <p-button usePadding>查询</p-button>\r\n  </template>\r\n  <template #column-name="{ data }">\r\n    <span>我是插槽渲染的{{ data }}</span>\r\n  </template>\r\n  <template #expand="{ data }">\r\n    <div style="min-height: 200px" class="center">\r\n      我是额外渲染渲染的{{ data }}\r\n    </div>\r\n  </template>\r\n</p-table>')],-1),D=k("PTable ColumnOption属性");$.render=function(e,a,l,n,t,r){const d=m("p-button"),p=m("p-table-n"),s=m("p-table"),o=m("p-divider"),i=m("p-card"),k=m("read-component"),f=m("p-scroll");return u(),c("div",N,[b(f,{style:{height:"100%"}},{default:x((()=>[b("div",j,[R,w,S,T,b(i,{style:{"margin-top":"20px"}},{default:x((()=>[b("div",I,[b(p,{title:"低兼容性使用p-table-n",list:e.list,columns:e.columns},{operate:x((()=>[b(d,{usePadding:""},{default:x((()=>[O])),_:1})])),"column-name":x((({data:e})=>[b("span",null,"我是插槽渲染的"+y(e),1)])),expand:x((({data:e})=>[b("div",q," 我是额外渲染渲染的"+y(e),1)])),_:1},8,["list","columns"]),b(s,{title:"复杂使用, 使用grid布局",list:e.list,columns:e.columns},{operate:x((()=>[b(d,{usePadding:""},{default:x((()=>[A])),_:1})])),"column-name":x((({data:e})=>[b("span",null,"我是插槽渲染的"+y(e),1)])),expand:x((({data:e})=>[b("div",B," 我是额外渲染渲染的"+y(e),1)])),_:1},8,["list","columns"]),b(o,{style:{margin:"10px 0"}}),V,b("pre",null,[b("code",null,y("const list = reactive([\n  {\n    id: 1,\n    name: '香蕉',\n    _expand: false,\n    _expandName: 'groupName'\n  },\n  {\n    id: 3,\n    name: '西瓜',\n    _expand: false,\n    _expandName: 'groupName'\n  }\n])\nconst columns: ColumnOption[] = [\n  {\n    key: 'checkbox',\n    labelRender: () => h(Checkbox, { combine: true, name: 'group' }),\n    render: ({ data }) => h(Checkbox, { name: 'group' }),\n    width: '80px',\n    fix: 'left'\n  },\n  { key: 'id', label: 'ID', width: '130px' },\n  { key: 'name', label: '名称', fix: 'left' },\n  { key: 'name1', label: '名称' },\n  { key: 'name2', label: '名称' },\n  { key: 'name3', label: '名称' },\n  { key: 'name4', label: '名称' },\n  {\n    key: 'expandIcon',\n    label: '展开',\n    render: ({ index }) =>\n      h(\n        PButton,\n        {\n          importance: 'text',\n          onClick: () => (list[index]._expand = !list[index]._expand)\n        },\n        { default: () => '展开' }\n      )\n  }\n]"),1)])])])),_:1}),b(k,{p:e.PTable},null,8,["p"]),b(i,{style:{"margin-top":"20px"}},{title:x((()=>[D])),default:x((()=>[b(s,{list:[{key:"key",type:"Any",required:"是",mark:"列的键",default:""},{key:"width",type:"String",required:"",mark:"列宽度, 渲染进grid-template-columns",default:"auto"},{key:"label",type:"String",required:"",mark:"渲染标题文字",default:""},{key:"labelRender",type:"() => VNodeChild | JSX.Element",required:"",mark:"渲染标题渲染函数, 使用时忽略label属性",default:""},{key:"render",type:"({ data: object, value: any, index: number, column: ColumnOption}) => VNodeChild | JSX.Element",required:"",mark:"表格体渲染函数",default:""}],columns:[{key:"key",label:"属性名",width:"130px"},{key:"type",label:"类型"},{key:"required",label:"是否必传",width:"80px"},{key:"mark",label:"描述"},{key:"default",label:"默认值"}]},null,8,["list"])])),_:1})])])),_:1})])};export default $;
